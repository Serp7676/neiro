// app/api/chat/route.ts
import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';
import { readFile } from 'fs/promises';
import path from 'path';
import { JSDOM } from 'jsdom';
import { convertToHtml } from 'mammoth'; // npm install mammoth

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ .docx –≤ —Ç–µ–∫—Å—Ç
async function loadTxt(filename: string): Promise<string> {
  const filePath = path.join(process.cwd(), 'public', 'docs', filename);
  return await readFile(filePath, 'utf-8');
}

export async function POST(req: NextRequest) {
  const { message } = await req.json();

  try {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ –∑–Ω–∞–Ω–∏–π
    const instructions = await loadTxt('instructions.txt');
    const knowledge = await loadTxt('knowledge.txt');

    // –°–±–æ—Ä system-–ø—Ä–æ–º—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –∑–Ω–∞–Ω–∏—è–º–∏
    const systemPrompt = `
–í—ã ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π GPT-–∞–≥–µ–Ω—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ –∑–Ω–∞–Ω–∏–π:

üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
${instructions}

üìö –ó–Ω–∞–Ω–∏—è:
${knowledge}

–û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –ø–æ —ç—Ç–∏–º –¥–∞–Ω–Ω—ã–º, –∏–∑–±–µ–≥–∞–π –¥–æ–º—ã—Å–ª–æ–≤.
`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenAI
    const chat = await openai.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: systemPrompt },
        { role: 'user', content: message },
      ],
    });

    const response = chat.choices[0].message.content;
    return NextResponse.json({ response });
  } catch (error) {
    console.error('Error in /api/chat:', error);
    return NextResponse.json({ error: 'Something went wrong', details: String(error) }, { status: 500 });
  }
}
